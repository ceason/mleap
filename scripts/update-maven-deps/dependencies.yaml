options:
  languages: [ "java", "scala:2.11.12" ]
  resolverType: "coursier"
  resolvers:
  - {id: mavencentral,      type: default, url: "https://repo.maven.apache.org/maven2/"}
  - {id: SonatypeReleases,  type: default, url: "https://oss.sonatype.org/content/repositories/releases"}
  - {id: SonatypeSnapshots, type: default, url: "https://oss.sonatype.org/content/repositories/snapshots"}
  - {id: jitpack,           type: default, url: "https://jitpack.io"}
  - {id: databricks,        type: default, url: "https://dl.bintray.com/databricks/maven"}
  - {id: spring-plugins,    type: default, url: "http://repo.spring.io/plugins-release/"}
  - {id: redshift,          type: default, url: "http://redshift-maven-repository.s3-website-us-east-1.amazonaws.com/release"}
  transitivity: deps
  versionConflictPolicy: highest
  strictVisibility: true
  outputFormat: flatfile
  thirdPartyDirectory: 3rdparty/maven

dependencies:
  #mleap-tensor
  io.spray:
    spray:
      lang: scala
      version: '1.3.2'
      modules: [json]

  #mleap-core
  org.apache.spark:
    spark:
      lang: scala
      version: 2.3.0
      modules: [mllib-local]
  com.github.rwl:
    jtransforms:
      lang: java
      version: 2.4.0

  #bundle-ml
  com.typesafe:
    config:
      lang: java
      version: 1.3.0
  com.jsuereth:
    scala-arm:
      lang: scala
      version: '2.0'
  com.thesamet.scalapb:
    scalapb:
      lang: scala
      version: 0.7.1
      modules: [runtime]
  com.google.protobuf:
    protobuf:
      lang: java
      version: 3.5.1
      modules: [java]

  # mleap-tensorflow
  org.tensorflow:
    libtensorflow_jni:
      lang: java
      version: 1.11.0
    libtensorflow:
      lang: java
      version: 1.11.0

  # mleap-spark-testkit
  com.databricks:
    spark-avro:
      lang: scala
      version: 3.0.1

replacements:
  org.scalatest:
    scalatest:
      lang: scala
      target: "@io_bazel_rules_scala_scalatest"
  org.scalactic:
    scalactic:
      lang: scala
      target: "@io_bazel_rules_scala_scalactic"
  org.scala-lang:
    scala-library:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_library"
    scala-reflect:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_reflect"
    scala-compiler:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_compiler"
  org.scala-lang.modules:
    scala-parser-combinators:
      lang: scala
      target: "@io_bazel_rules_scala_scala_parser_combinators"
    scala-xml:
      lang: scala
      target: "@io_bazel_rules_scala_scala_xml"